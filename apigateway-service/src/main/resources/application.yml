server:
  port: 8000

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: apigateway-service
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      routes:
#        - id: user-service
#          uri: lb://USER-SERVICE # eureka에 등록되어 있는 name 쓰기
#          predicates:
#            - Path=/user-service/**
        - id: user-service
          uri: lb://USER-SERVICE # eureka에 등록되어 있는 name 쓰기
          predicates:
            - Path=/user-service/login
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie # 매번 새로운 request처럼 받기 위해 header 초기화 (Cookie 제거)
            - RewritePath=/user-service/(?<segment>.*), /$\{segment} # 왼 처럼 들어오면 오 처럼 바꾸겠다는 의미
        - id: user-service
          uri: lb://USER-SERVICE # eureka에 등록되어 있는 name 쓰기
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie # 매번 새로운 request처럼 받기 위해 header 초기화 (Cookie 제거)
            - RewritePath=/user-service/(?<segment>.*), /$\{segment} # 왼 처럼 들어오면 오 처럼 바꾸겠다는 의미

        - id: user-service
          uri: lb://USER-SERVICE # eureka에 등록되어 있는 name 쓰기
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie # 매번 새로운 request처럼 받기 위해 header 초기화 (Cookie 제거)
            - RewritePath=/user-service/(?<segment>.*), /$\{segment} # 왼 처럼 들어오면 오 처럼 바꾸겠다는 의미
            - AuthorizationHeaderFilter # Filter 처리 => 로그인 되었는지? 아닌지?

        - id: user-service
          uri: lb://USER-SERVICE # eureka에 등록되어 있는 name 쓰기
          predicates:
            - Path=/user-service/actuator/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie # 매번 새로운 request처럼 받기 위해 header 초기화 (Cookie 제거)
            - RewritePath=/user-service/(?<segment>.*), /$\{segment} # 왼 처럼 들어오면 오 처럼 바꾸겠다는 의미
        - id: catalog-service
          uri: lb://CATALOG-SERVICE # eureka에 등록되어 있는 name 쓰기
          predicates:
            - Path=/catalog-service/**
        - id: order-service
          uri: lb://ORDER-SERVICE # eureka에 등록되어 있는 name 쓰기
          predicates:
            - Path=/order-service/**


#token:
#  secret: user_token

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httptrace, busrefresh
